import os
import time
from pybit.unified_trading import HTTP
from dotenv import load_dotenv

load_dotenv()

session = HTTP(
    api_key=os.getenv("BYBIT_API_KEY"),
    api_secret=os.getenv("BYBIT_API_SECRET")
)

def get_top_funding_pairs(min_rate=0.00005, top_n=5):
    try:
        response = session.get_tickers(category="linear")
        symbols = response["result"]["list"]

        top = []
        for s in symbols:
            symbol = s["symbol"]
            raw_rate = s.get("fundingRate")
            try:
                rate = float(raw_rate)
                if abs(rate) >= min_rate:
                    top.append((symbol, rate))
            except (TypeError, ValueError):
                # fundingRate = None –∏–ª–∏ '' ‚Äî –ø—Ä–æ–ø—É—Å–∫–∞–µ–º
                continue

        top.sort(key=lambda x: abs(x[1]), reverse=True)

        print(f"\nüìä –¢–æ–ø {top_n} –∞–∫—Ç–∏–≤–Ω—ã—Ö –ø–∞—Ä –ø–æ funding rate:\n")
        for i, (symbol, rate) in enumerate(top[:top_n], 1):
            print(f"{i}. {symbol} ‚Äî Funding Rate: {rate:.8f}")
        print("‚úÖ –ì–æ—Ç–æ–≤–æ.\n")
    except Exception as e:
        print(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ —Ç–∏–∫–µ—Ä–æ–≤: {e}")

if __name__ == "__main__":
    while True:
        print("üîÅ –ü–æ–ª—É—á–∞—é –ª—É—á—à–∏–µ –ø–∞—Ä—ã –ø–æ funding...\n")
        get_top_funding_pairs()
        time.sleep(30)
